name: Build

on:
  push:
    branches: ["main"]
    tags: ["*"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build project
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install FFmpeg
        id: setup-ffmpeg
        uses: FedericoCarboni/setup-ffmpeg@v3
        with:
          ffmpeg-version: "7.1"
          linking-type: shared

      - uses: Swatinem/rust-cache@v2

      - name: Build (Windows)
        if: ${{ contains('Windows', runner.os) }}
        run: |
          $env:FFMPEG_DIR='${{ steps.setup-ffmpeg.outputs.ffmpeg-path }}'
          cargo build-windows --release
          echo "version=$(git describe --tags --dirty)" >> $env:GITHUB_OUTPUT

      - name: Build
        if: ${{ !contains('Windows', runner.os) }}
        run: |
          export FFMPEG_DIR='${{ steps.setup-ffmpeg.outputs.ffmpeg-path }}'
          cargo build --release
          echo "version=$(git describe --tags --dirty)" >> $GITHUB_OUTPUT

      - name: Publish artifact (Windows)
        if: ${{ contains('Windows', runner.os) }}
        uses: actions/upload-artifact@v4
        with:
          name: mltd-git-${{ steps.version_windows.outputs.version }}-Windows.exe
          path: target/release/mltd.exe

      - name: Publish artifact
        if: ${{ !contains('Windows', runner.os) }}
        uses: actions/upload-artifact@v4
        with:
          name: mltd-git-${{ steps.version.outputs.version }}-${{ runner.os }}
          path: target/release/mltd
